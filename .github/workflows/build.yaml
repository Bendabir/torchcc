name: Build
on:
  push:
    branches: [main]
jobs:
  build:
    name: build-library
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          # FIXME : Fix issues with recent G++ versions.
          #         See : https://stackoverflow.com/questions/6622454/cuda-incompatible-with-my-gcc-version
          # # CUDA 9.2
          # - cuda-version: "9.2"
          #   python-version: "3.9"
          # # CUDA 10.1
          # - cuda-version: "10.1"
          #   python-version: "3.9"
          # # CUDA 10.2
          # - cuda-version: "10.2"
          #   python-version: "3.9"
          # - cuda-version: "10.2"
          #   python-version: "3.10"
          # # CUDA 11.0
          # - cuda-version: "11.0"
          #   python-version: "3.9"
          # # CUDA 11.1
          # - cuda-version: "11.1"
          #   python-version: "3.9"
          # # CUDA 11.3
          # - cuda-version: "11.3"
          #   python-version: "3.9"
          # - cuda-version: "11.3"
          #   python-version: "3.10"
          # # CUDA 11.6
          # - cuda-version: "11.6"
          #   python-version: "3.9"
          # - cuda-version: "11.6"
          #   python-version: "3.10"
          # # CUDA 11.7
          # - cuda-version: "11.7"
          #   python-version: "3.9"
          # - cuda-version: "11.7"
          #   python-version: "3.10"
          # - cuda-version: "11.7"
          #   python-version: "3.11"
          # # CUDA 11.8
          # - cuda-version: "11.8"
          #   python-version: "3.9"
          # - cuda-version: "11.8"
          #   python-version: "3.10"
          # - cuda-version: "11.8"
          #   python-version: "3.11"
          # - cuda-version: "11.8"
          #   python-version: "3.12"
          # # CUDA 12.1
          # - cuda-version: "12.1"
          #   python-version: "3.9"
          # - cuda-version: "12.1"
          #   python-version: "3.10"
          # - cuda-version: "12.1"
          #   python-version: "3.11"
          # - cuda-version: "12.1"
          #   python-version: "3.12"
          # # CUDA 12.4
          # - cuda-version: "12.4"
          #   python-version: "3.9"
          - cuda-version: "12.4"
            python-version: "3.10"
          # - cuda-version: "12.4"
          #   python-version: "3.11"
          # - cuda-version: "12.4"
          #   python-version: "3.12"
    container:
      image: ghcr.io/bendabir/cuda:${{ matrix.cuda-version }}
    env:
      POETRY_CORE_VERSION: "1.9.0"
    steps:
      - name: sync-code
        uses: actions/checkout@v4
      - name: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # NOTE : Not running pip check because it causes some errors with Ninja
      - name: prepare-env
        run: python -m pip install "poetry-core==${{ env.POETRY_CORE_VERSION }}" ninja wheel
      - name: install-torch
        env:
          CUDA_VERSION: ${{ matrix.cuda-version }}
        shell: bash
        run: python -m pip install torch numpy setuptools typing-extensions --index-url https://download.pytorch.org/whl/cu${CUDA_VERSION//\./}
      - name: generate-setup
        run: python poetry2setup.py
      - name: build
        run: python setup.py bdist_wheel
